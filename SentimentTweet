import os
import time
import tweepy
import pandas as pd
import json
import argparse

from google.cloud import language
from google.cloud.language import enums
from google.cloud.language import types

# Authenticate to Twitter
auth = tweepy.OAuthHandler(...)
auth.set_access_token(...)

# Create API object
api = tweepy.API(auth)
api = tweepy.API(auth, wait_on_rate_limit=True)

# Search SETUP
number_tweet = 20
date_since = "2020-2-20"
search_words = "STRING"
new_search = search_words + " -filter:retweets"
tweets = tweepy.Cursor(api.search,
                       q=new_search,
                       lang="en",
                       since=date_since).items(number_tweet)
users_locs = [[tweet.user.screen_name, tweet.user.location, tweet.text] for tweet in tweets]

tweet_text = pd.DataFrame(data=users_locs, 
                    columns=['User', "Location","Text"])


table  = pd.DataFrame.insert(tweet_text, loc=3, column='Score', value="")

table  = pd.DataFrame.insert(tweet_text, loc=4, column='Magnit', value="")


tweet_text.to_csv(r'file.csv')

file_tweet  = 'file.csv

client = language.LanguageServiceClient()

df = pd.DataFrame(tweet_text) 

i = 0

while  i < number_tweet:
        time.sleep(1)
        client = language.LanguageServiceClient() 
        content =  str(df.at[i, 'Text'])
        print(content)
        document = types.Document(
          content=content,
          type=enums.Document.Type.PLAIN_TEXT)
        response = client.analyze_sentiment(document=document)
        print(response)

        score_tweet = format(response.document_sentiment.score)
        magnitude_tweet = format(response.document_sentiment.magnitude)
        print(score_tweet, magnitude_tweet)
        df.at[i, 'Score'] = score_tweet
        df.at[i, 'Magnit'] = magnitude_tweet
        i += 1

tweet_text.to_csv(r'file.csv')

